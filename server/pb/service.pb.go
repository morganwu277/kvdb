// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/pb/service.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type KVRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVRequest) Reset()         { *m = KVRequest{} }
func (m *KVRequest) String() string { return proto.CompactTextString(m) }
func (*KVRequest) ProtoMessage()    {}
func (*KVRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_c3bae2e4f00b7168, []int{0}
}
func (m *KVRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVRequest.Unmarshal(m, b)
}
func (m *KVRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVRequest.Marshal(b, m, deterministic)
}
func (dst *KVRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVRequest.Merge(dst, src)
}
func (m *KVRequest) XXX_Size() int {
	return xxx_messageInfo_KVRequest.Size(m)
}
func (m *KVRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KVRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KVRequest proto.InternalMessageInfo

func (m *KVRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KVRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type KVResponse struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	ErrMsg               string   `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVResponse) Reset()         { *m = KVResponse{} }
func (m *KVResponse) String() string { return proto.CompactTextString(m) }
func (*KVResponse) ProtoMessage()    {}
func (*KVResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_c3bae2e4f00b7168, []int{1}
}
func (m *KVResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVResponse.Unmarshal(m, b)
}
func (m *KVResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVResponse.Marshal(b, m, deterministic)
}
func (dst *KVResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVResponse.Merge(dst, src)
}
func (m *KVResponse) XXX_Size() int {
	return xxx_messageInfo_KVResponse.Size(m)
}
func (m *KVResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KVResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KVResponse proto.InternalMessageInfo

func (m *KVResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KVResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *KVResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*KVRequest)(nil), "pb.KVRequest")
	proto.RegisterType((*KVResponse)(nil), "pb.KVResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KVDBServiceClient is the client API for KVDBService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVDBServiceClient interface {
	Read(ctx context.Context, in *KVRequest, opts ...grpc.CallOption) (*KVResponse, error)
	Write(ctx context.Context, in *KVRequest, opts ...grpc.CallOption) (*KVResponse, error)
}

type kVDBServiceClient struct {
	cc *grpc.ClientConn
}

func NewKVDBServiceClient(cc *grpc.ClientConn) KVDBServiceClient {
	return &kVDBServiceClient{cc}
}

func (c *kVDBServiceClient) Read(ctx context.Context, in *KVRequest, opts ...grpc.CallOption) (*KVResponse, error) {
	out := new(KVResponse)
	err := c.cc.Invoke(ctx, "/pb.KVDBService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVDBServiceClient) Write(ctx context.Context, in *KVRequest, opts ...grpc.CallOption) (*KVResponse, error) {
	out := new(KVResponse)
	err := c.cc.Invoke(ctx, "/pb.KVDBService/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVDBServiceServer is the server API for KVDBService service.
type KVDBServiceServer interface {
	Read(context.Context, *KVRequest) (*KVResponse, error)
	Write(context.Context, *KVRequest) (*KVResponse, error)
}

func RegisterKVDBServiceServer(s *grpc.Server, srv KVDBServiceServer) {
	s.RegisterService(&_KVDBService_serviceDesc, srv)
}

func _KVDBService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVDBServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.KVDBService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVDBServiceServer).Read(ctx, req.(*KVRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVDBService_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVDBServiceServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.KVDBService/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVDBServiceServer).Write(ctx, req.(*KVRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KVDBService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.KVDBService",
	HandlerType: (*KVDBServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _KVDBService_Read_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _KVDBService_Write_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server/pb/service.proto",
}

func init() { proto.RegisterFile("server/pb/service.proto", fileDescriptor_service_c3bae2e4f00b7168) }

var fileDescriptor_service_c3bae2e4f00b7168 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2f, 0x48, 0xd2, 0x07, 0xb1, 0x32, 0x93, 0x53, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b,
	0xf2, 0x85, 0x98, 0x0a, 0x92, 0x94, 0x8c, 0xb9, 0x38, 0xbd, 0xc3, 0x82, 0x52, 0x0b, 0x4b, 0x53,
	0x8b, 0x4b, 0x84, 0x04, 0xb8, 0x98, 0xb3, 0x53, 0x2b, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83,
	0x40, 0x4c, 0x21, 0x11, 0x2e, 0xd6, 0xb2, 0xc4, 0x9c, 0xd2, 0x54, 0x09, 0x26, 0xb0, 0x18, 0x84,
	0xa3, 0xe4, 0xc3, 0xc5, 0x05, 0xd2, 0x54, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x4a, 0xac, 0x2e, 0x21,
	0x31, 0x2e, 0xb6, 0xd4, 0xa2, 0x22, 0xdf, 0xe2, 0x74, 0x09, 0x66, 0xb0, 0x30, 0x94, 0x67, 0x94,
	0xc0, 0xc5, 0xed, 0x1d, 0xe6, 0xe2, 0x14, 0x0c, 0x71, 0x9b, 0x90, 0x3a, 0x17, 0x4b, 0x50, 0x6a,
	0x62, 0x8a, 0x10, 0xaf, 0x5e, 0x41, 0x92, 0x1e, 0xdc, 0x6d, 0x52, 0x7c, 0x30, 0x2e, 0xc4, 0x56,
	0x25, 0x06, 0x21, 0x0d, 0x2e, 0xd6, 0xf0, 0xa2, 0xcc, 0x92, 0x54, 0x82, 0x2a, 0x93, 0xd8, 0xc0,
	0xfe, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x47, 0xfd, 0xee, 0xe4, 0x0a, 0x01, 0x00, 0x00,
}
